{
  "_args": [
    [
      {
        "raw": "read-all-stream@^3.0.0",
        "scope": null,
        "escapedName": "read-all-stream",
        "name": "read-all-stream",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/home/stefan/Documents/Arbeit/HeiGIT/realtime_osm/api/node_modules/got"
    ]
  ],
  "_from": "read-all-stream@>=3.0.0 <4.0.0",
  "_id": "read-all-stream@3.1.0",
  "_inCache": true,
  "_location": "/read-all-stream",
  "_nodeVersion": "4.2.4",
  "_npmUser": {
    "name": "floatdrop",
    "email": "floatdrop@gmail.com"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "read-all-stream@^3.0.0",
    "scope": null,
    "escapedName": "read-all-stream",
    "name": "read-all-stream",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/got"
  ],
  "_resolved": "https://registry.npmjs.org/read-all-stream/-/read-all-stream-3.1.0.tgz",
  "_shasum": "35c3e177f2078ef789ee4bfafa4373074eaef4fa",
  "_shrinkwrap": null,
  "_spec": "read-all-stream@^3.0.0",
  "_where": "/home/stefan/Documents/Arbeit/HeiGIT/realtime_osm/api/node_modules/got",
  "author": {
    "name": "Vsevolod Strukchinsky",
    "email": "floatdrop@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/floatdrop/read-all-stream/issues"
  },
  "dependencies": {
    "pinkie-promise": "^2.0.0",
    "readable-stream": "^2.0.0"
  },
  "description": "Read all stream content and pass it to callback",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "35c3e177f2078ef789ee4bfafa4373074eaef4fa",
    "tarball": "https://registry.npmjs.org/read-all-stream/-/read-all-stream-3.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "636cb4f64d9bf5261c7c42d257071b528caa7888",
  "homepage": "https://github.com/floatdrop/read-all-stream#readme",
  "keywords": [
    "stream",
    "read",
    "buffer",
    "callback"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "floatdrop",
      "email": "floatdrop@gmail.com"
    }
  ],
  "name": "read-all-stream",
  "optionalDependencies": {},
  "readme": "# read-all-stream [![Build Status][travis-image]][travis-url]\n\n> Read stream to buffer or string\n\n## Install\n\n```\n$ npm install --save read-all-stream\n```\n\n## Usage\n\n```js\nvar read = require('read-all-stream');\nvar stream = fs.createReadStream('index.js');\n\nread(stream).then(function (data) {\n\tconsole.log(data.length);\n});\n\nread(stream, 'utf8', function (err, data) {\n\tconsole.log(data.length);\n\t//=> 42\n});\n\n```\n\n### API\n\n#### read(stream, [options], [callback])\n\nIf callback is omitted, Promise will be returned.\n\n##### stream\n\n*Required*  \nType: `Stream`\n\nEvent emitter, which `data` events will be consumed.\n\n##### options\n\nType: `object` or `string`\n\nIf type of `options` is `string`, then it will be used as encoding.\nIf type is `Object`, then next options are available:\n\n##### options.encoding\n\nType: `string`, `null`  \nDefault: `'utf8'`\n\nEncoding to be used on `toString` of the data. If null, the body is returned as a Buffer.\n\n##### callback(err, data)\n\nWill be called after stream is read.\n\n###### err\n\n`Error` object (if `error` event happens).\n\n###### data\n\nThe data in stream.\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](floatdrop@gmail.com)\n\n[travis-url]: https://travis-ci.org/floatdrop/read-all-stream\n[travis-image]: https://img.shields.io/travis/floatdrop/read-all-stream.svg\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/floatdrop/read-all-stream.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "3.1.0"
}
