{
  "_args": [
    [
      {
        "raw": "statuses@~1.3.1",
        "scope": null,
        "escapedName": "statuses",
        "name": "statuses",
        "rawSpec": "~1.3.1",
        "spec": ">=1.3.1 <1.4.0",
        "type": "range"
      },
      "/home/stefan/Documents/Arbeit/HeiGIT/realtime_osm/api/node_modules/express"
    ]
  ],
  "_from": "statuses@>=1.3.1 <1.4.0",
  "_id": "statuses@1.3.1",
  "_inCache": true,
  "_location": "/statuses",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/statuses-1.3.1.tgz_1478923281491_0.5574048184789717"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "statuses@~1.3.1",
    "scope": null,
    "escapedName": "statuses",
    "name": "statuses",
    "rawSpec": "~1.3.1",
    "spec": ">=1.3.1 <1.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/express",
    "/finalhandler",
    "/http-errors",
    "/send"
  ],
  "_resolved": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz",
  "_shasum": "faf51b9eb74aaef3b3acf4ad5f61abf24cb7b93e",
  "_shrinkwrap": null,
  "_spec": "statuses@~1.3.1",
  "_where": "/home/stefan/Documents/Arbeit/HeiGIT/realtime_osm/api/node_modules/express",
  "bugs": {
    "url": "https://github.com/jshttp/statuses/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    }
  ],
  "dependencies": {},
  "description": "HTTP status utility",
  "devDependencies": {
    "csv-parse": "1.1.7",
    "eslint": "3.10.0",
    "eslint-config-standard": "6.2.1",
    "eslint-plugin-promise": "3.3.2",
    "eslint-plugin-standard": "2.0.1",
    "istanbul": "0.4.5",
    "mocha": "1.21.5",
    "stream-to-array": "2.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "faf51b9eb74aaef3b3acf4ad5f61abf24cb7b93e",
    "tarball": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "index.js",
    "codes.json",
    "LICENSE"
  ],
  "gitHead": "28a619be77f5b4741e6578a5764c5b06ec6d4aea",
  "homepage": "https://github.com/jshttp/statuses#readme",
  "keywords": [
    "http",
    "status",
    "code"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "defunctzombie",
      "email": "shtylman@gmail.com"
    },
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "fishrock123",
      "email": "fishrock123@rocketmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "mscdex",
      "email": "mscdex@mscdex.net"
    },
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    }
  ],
  "name": "statuses",
  "optionalDependencies": {},
  "readme": "# Statuses\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nHTTP status utility for node.\n\n## API\n\n```js\nvar status = require('statuses')\n```\n\n### var code = status(Integer || String)\n\nIf `Integer` or `String` is a valid HTTP code or status message, then the appropriate `code` will be returned. Otherwise, an error will be thrown.\n\n```js\nstatus(403) // => 403\nstatus('403') // => 403\nstatus('forbidden') // => 403\nstatus('Forbidden') // => 403\nstatus(306) // throws, as it's not supported by node.js\n```\n\n### status.codes\n\nReturns an array of all the status codes as `Integer`s.\n\n### var msg = status[code]\n\nMap of `code` to `status message`. `undefined` for invalid `code`s.\n\n```js\nstatus[404] // => 'Not Found'\n```\n\n### var code = status[msg]\n\nMap of `status message` to `code`. `msg` can either be title-cased or lower-cased. `undefined` for invalid `status message`s.\n\n```js\nstatus['not found'] // => 404\nstatus['Not Found'] // => 404\n```\n\n### status.redirect[code]\n\nReturns `true` if a status code is a valid redirect status.\n\n```js\nstatus.redirect[200] // => undefined\nstatus.redirect[301] // => true\n```\n\n### status.empty[code]\n\nReturns `true` if a status code expects an empty body.\n\n```js\nstatus.empty[200] // => undefined\nstatus.empty[204] // => true\nstatus.empty[304] // => true\n```\n\n### status.retry[code]\n\nReturns `true` if you should retry the rest.\n\n```js\nstatus.retry[501] // => undefined\nstatus.retry[503] // => true\n```\n\n## Adding Status Codes\n\nThe status codes are primarily sourced from http://www.iana.org/assignments/http-status-codes/http-status-codes-1.csv.\nAdditionally, custom codes are added from http://en.wikipedia.org/wiki/List_of_HTTP_status_codes.\nThese are added manually in the `lib/*.json` files.\nIf you would like to add a status code, add it to the appropriate JSON file.\n\nTo rebuild `codes.json`, run the following:\n\n```bash\n# update src/iana.json\nnpm run fetch\n# build codes.json\nnpm run build\n```\n\n[npm-image]: https://img.shields.io/npm/v/statuses.svg\n[npm-url]: https://npmjs.org/package/statuses\n[node-version-image]: https://img.shields.io/badge/node.js-%3E%3D_0.6-brightgreen.svg\n[node-version-url]: https://nodejs.org/en/download\n[travis-image]: https://img.shields.io/travis/jshttp/statuses.svg\n[travis-url]: https://travis-ci.org/jshttp/statuses\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/statuses.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/statuses?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/statuses.svg\n[downloads-url]: https://npmjs.org/package/statuses\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/statuses.git"
  },
  "scripts": {
    "build": "node scripts/build.js",
    "fetch": "node scripts/fetch.js",
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "update": "npm run fetch && npm run build"
  },
  "version": "1.3.1"
}
